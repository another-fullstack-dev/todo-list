{"version":3,"file":"main.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;;;;;;;;;;;;;;ACQiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI,OAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,cAAc;AAChB;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA,IAAI,cAAc;AAClB,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO;AACf,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO;AACb,KAAK;AACL,IAAI,cAAc;AAClB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,oBAAoB,OAAO;AAC3B,EAAE,WAAW;AACb;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB,IAAI;AACrB,EAAE,OAAO;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,SAAS,OAAO;AAChB,IAAI,OAAO,aAAa,OAAO;AAC/B;AACA;AACA;AACqC;;;AClNf;AACiC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AAC0F","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./src/domLogic.js","webpack:///./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import {\r\n  content,\r\n  projectDiv,\r\n  projectList,\r\n  projectSelect,\r\n  currentProject,\r\n  Todo,\r\n  Project,\r\n} from \"./index\";\r\n\r\nfunction createTodo(object) {\r\n  let div = document.createElement(\"div\");\r\n  let h2 = document.createElement(\"h2\");\r\n  let p = document.createElement(\"p\");\r\n  let footer = document.createElement(\"footer\");\r\n  let dueSpan = document.createElement(\"span\");\r\n  let prioSpan = document.createElement(\"span\");\r\n  let completedBtn = document.createElement(\"button\");\r\n  let removeBtn = document.createElement(\"button\");\r\n\r\n  footer.appendChild(dueSpan);\r\n  footer.appendChild(prioSpan);\r\n  footer.appendChild(completedBtn);\r\n  footer.appendChild(removeBtn);\r\n\r\n  completedBtn.addEventListener(\"click\", () => {\r\n    if (object.completed) {\r\n      return;\r\n    }\r\n    object.completed = true;\r\n    div.style.opacity = 0.5;\r\n    localStorage.setItem(object.title, JSON.stringify(object));\r\n    if (localStorage.getItem(\"project\")) {\r\n      let project = JSON.parse(\r\n        localStorage.getItem(localStorage.getItem(\"project\"))\r\n      );\r\n      project.todos[object.index].completed = true;\r\n      localStorage.setItem(project.title, JSON.stringify(project));\r\n    }\r\n  });\r\n\r\n  removeBtn.addEventListener(\"click\", () => {\r\n    content.removeChild(div);\r\n    localStorage.removeItem(object.title);\r\n    if (localStorage.getItem(\"project\")) {\r\n      let project = JSON.parse(\r\n        localStorage.getItem(localStorage.getItem(\"project\"))\r\n      );\r\n      project.todos.splice(project.todos[object.index], 1);\r\n      localStorage.setItem(project.title, JSON.stringify(project));\r\n    }\r\n  });\r\n\r\n  div.appendChild(h2);\r\n  div.appendChild(p);\r\n  div.appendChild(footer);\r\n\r\n  h2.textContent = object.title;\r\n  p.textContent = object.description;\r\n  dueSpan.textContent = object.dueDate;\r\n  prioSpan.textContent = object.priority;\r\n  completedBtn.textContent = \"Mark as completed\";\r\n  removeBtn.textContent = \"X\";\r\n\r\n  if (object.completed) {\r\n    div.style.opacity = 0.5;\r\n  }\r\n\r\n  div.classList.add(\"todo\");\r\n\r\n  return div;\r\n}\r\n\r\nconst dialogCreateTodo = document.querySelector(\".dialog-todo\");\r\nconst dialogCreateProject = document.querySelector(\".dialog-project\");\r\nconst addTodoBtn = document.querySelector(\".add\");\r\nconst addProjectBtn = document.querySelector(\".btn-add-project\");\r\nconst closeModal = document.querySelectorAll(\".close\");\r\nconst inputsTodo = document.querySelectorAll(\".form-todo > input\");\r\nconst inputsProject = document.querySelectorAll(\".form-project > input\");\r\nconst inputs = document.querySelectorAll(\"form > input\");\r\n\r\nconst mainProject = document.querySelector(\".main-page-li\");\r\nmainProject.addEventListener(\"click\", () => {\r\n  clearContent();\r\n  currentProject.textContent = \"Main page\";\r\n  localStorage.removeItem(\"project\");\r\n  for (let i = 0; i < localStorage.length; i++) {\r\n    try {\r\n      let item = JSON.parse(localStorage.getItem(localStorage.key(i)));\r\n      if (item.type == \"project\" || localStorage.key(i) == \"project\") {\r\n        continue;\r\n      }\r\n      content.appendChild(createTodo(item));\r\n    } catch (Error) {\r\n      // not needed?\r\n      console.error(Error);\r\n      continue;\r\n    }\r\n  }\r\n});\r\n\r\nfunction createProject(object) {\r\n  let p = document.createElement(\"p\");\r\n  let li = document.createElement(\"li\");\r\n  let btn = document.createElement(\"button\");\r\n  btn.textContent = \"X\";\r\n  btn.setAttribute(\"hidden\", \"\");\r\n  btn.addEventListener(\"click\", (Event) => {\r\n    Event.stopPropagation();\r\n    clearContent();\r\n    projectList.removeChild(li);\r\n    localStorage.removeItem(object.title);\r\n    localStorage.removeItem(\"project\");\r\n    currentProject.textContent = \"Main page\";\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      try {\r\n        let item = JSON.parse(localStorage.getItem(localStorage.key(i)));\r\n        if (item.type == \"project\" || localStorage.key(i) == \"project\") {\r\n          continue;\r\n        }\r\n        content.appendChild(createTodo(item));\r\n      } catch (Error) {\r\n        // not needed?\r\n        console.error(Error);\r\n        continue;\r\n      }\r\n    }\r\n    /* mainProject.dispatchEvent(); */ // how the hell its done? new Event is not working. because of this i need to repeat code above.\r\n  });\r\n  li.appendChild(p);\r\n  li.appendChild(btn);\r\n  p.textContent = object.title;\r\n  li.addEventListener(\"click\", () => {\r\n    clearContent();\r\n    localStorage.setItem(\"project\", p.textContent);\r\n    JSON.parse(\r\n      localStorage.getItem(localStorage.getItem(\"project\"))\r\n    ).todos.forEach((todo) => {\r\n      content.appendChild(createTodo(todo));\r\n    });\r\n    currentProject.textContent = p.textContent;\r\n  });\r\n\r\n  li.addEventListener(\"mouseover\", () => {\r\n    li.lastChild.removeAttribute(\"hidden\")\r\n  })\r\n\r\n  li.addEventListener('mouseleave', () => {\r\n    li.lastChild.setAttribute(\"hidden\", \"\");\r\n  })\r\n\r\n  return li;\r\n}\r\n\r\naddTodoBtn.addEventListener(\"click\", () => {\r\n  dialogCreateTodo.showModal();\r\n});\r\n\r\naddProjectBtn.addEventListener(\"click\", () => {\r\n  dialogCreateProject.showModal();\r\n});\r\n\r\ncloseModal.forEach((button) => {\r\n  button.addEventListener(\"click\", () => {\r\n    button.parentElement.parentElement.parentElement.close(); // ok\r\n    inputs.forEach((node) => {\r\n      node.value = \"\";\r\n    });\r\n  });\r\n});\r\n\r\nconst projectForm = document.querySelector(\".form-project\");\r\nprojectForm.addEventListener(\"submit\", () => {\r\n  let array = [];\r\n  inputsProject.forEach((node) => {\r\n    array.push(node.value);\r\n    node.value = \"\";\r\n  });\r\n  let project = new Project(array[0]);\r\n  projectList.appendChild(createProject(project));\r\n  localStorage.setItem(project.title, JSON.stringify(project));\r\n});\r\n\r\nconst todoForm = document.querySelector(\".form-todo\");\r\ntodoForm.addEventListener(\"submit\", () => {\r\n  let array = [];\r\n  inputsTodo.forEach((node) => {\r\n    array.push(node.value);\r\n    node.value = \"\";\r\n  });\r\n  let todo = new Todo(array[0], array[1], array[2], array[3]);\r\n  content.appendChild(createTodo(todo));\r\n  if (localStorage.getItem(\"project\")) {\r\n    let project = JSON.parse(\r\n      localStorage.getItem(localStorage.getItem(\"project\"))\r\n    ); // its 12 pm im not even going to question it\r\n    project.todos.push(todo);\r\n    todo.index = project.todos.indexOf(todo);\r\n    localStorage.setItem(project.title, JSON.stringify(project));\r\n  }\r\n  localStorage.setItem(todo.title, JSON.stringify(todo));\r\n});\r\n\r\nfunction clearContent() {\r\n  while (content.lastChild) {\r\n    content.removeChild(content.lastChild);\r\n  }\r\n}\r\n\r\nexport { createTodo, createProject };\r\n","import \"./styles.css\";\r\nimport { createTodo, createProject } from \"./domLogic\";\r\n\r\nlocalStorage.removeItem(\"project\");\r\n\r\nconst content = document.querySelector(\"#content\");\r\nconst projectDiv = document.querySelector(\".project\");\r\nconst projectList = document.querySelector(\".project-list\");\r\nconst projectSelect = document.querySelector(\"#project-select\");\r\nconst currentProject = document.querySelector(\".current-project\");\r\n\r\nclass Todo {\r\n  constructor(\r\n    title,\r\n    description = \"\",\r\n    dueDate = \"\",\r\n    priority = \"\",\r\n    type = \"todo\"\r\n  ) {\r\n    this.title = title;\r\n    this.description = description;\r\n    this.dueDate = dueDate;\r\n    this.priority = priority;\r\n    this.completed = false;\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nclass Project {\r\n  constructor(title) {\r\n    this.title = title;\r\n    this.todos = [];\r\n    this.type = \"project\";\r\n  }\r\n}\r\n\r\ncurrentProject.textContent = \"Main page\";\r\nfor (let i = 0; i < localStorage.length; i++) {\r\n  let item = JSON.parse(localStorage.getItem(localStorage.key(i)));\r\n  if (item.type == \"project\" || localStorage.key(i) == \"project\") {\r\n    projectList.appendChild(createProject(item));\r\n    currentProject.textContent = item.title;\r\n    continue;\r\n  }\r\n  content.appendChild(createTodo(item));\r\n}\r\n\r\nexport { content, projectDiv, projectList, projectSelect, currentProject, Todo, Project };\r\n"],"names":[],"sourceRoot":""}